{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst fetchAllProducts = createAsyncThunk(\"product/fetchAllProducts\", async () => {\n  let response = await fetch(\"http://localhost:5000/api/products\");\n  let data = await response.json();\n  console.log(data);\n  return data;\n});\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    productItems: [],\n    isLoading: false\n  }\n});\nconsole.log(productSlice);\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchAllProducts","response","fetch","data","json","console","log","productSlice","name","initialState","productItems","isLoading","reducer"],"sources":["/media/sunil/Local Disk F/kirana/frontend/src/features/productSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst fetchAllProducts = createAsyncThunk(\n  \"product/fetchAllProducts\",\n  async () => {\n    let response = await fetch(\"http://localhost:5000/api/products\");\n    let data = await response.json();\n    console.log(data);\n    return data;\n  }\n);\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    productItems: [],\n    isLoading: false,\n  },\n});\n\nconsole.log(productSlice);\n\nexport default productSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,gBAAgB,GAAGD,gBAAgB,CACvC,0BADuC,EAEvC,YAAY;EACV,IAAIE,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA1B;EACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,OAAOA,IAAP;AACD,CAPsC,CAAzC;AAUA,MAAMI,YAAY,GAAGT,WAAW,CAAC;EAC/BU,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAE;IACZC,YAAY,EAAE,EADF;IAEZC,SAAS,EAAE;EAFC;AAFiB,CAAD,CAAhC;AAQAN,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAEA,eAAeA,YAAY,CAACK,OAA5B"},"metadata":{},"sourceType":"module"}