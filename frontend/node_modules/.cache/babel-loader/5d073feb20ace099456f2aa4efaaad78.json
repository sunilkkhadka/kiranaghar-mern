{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    addCartItem: (state, action) => {\n      const currentItem = action.payload;\n      const doesExists = state.cartItems.find(item => item.product === currentItem.product);\n\n      if (!doesExists) {}\n    }\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cartItems","reducers","addCartItem","state","action","currentItem","payload","doesExists","find","item","product","reducer"],"sources":["/media/sunil/Local Disk F/kirana/frontend/src/features/cartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: [],\n  },\n  reducers: {\n    addCartItem: (state, action) => {\n      const currentItem = action.payload;\n      const doesExists = state.cartItems.find(\n        (item) => item.product === currentItem.product\n      );\n\n      if (!doesExists) {\n      }\n    },\n  },\n});\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,SAAS,EAAE;EADC,CAFc;EAK5BC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9B,MAAMC,WAAW,GAAGD,MAAM,CAACE,OAA3B;MACA,MAAMC,UAAU,GAAGJ,KAAK,CAACH,SAAN,CAAgBQ,IAAhB,CAChBC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBL,WAAW,CAACK,OADtB,CAAnB;;MAIA,IAAI,CAACH,UAAL,EAAiB,CAChB;IACF;EATO;AALkB,CAAD,CAA7B;AAkBA,eAAeV,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}