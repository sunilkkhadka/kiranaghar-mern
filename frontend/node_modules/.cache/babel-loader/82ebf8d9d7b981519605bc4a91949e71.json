{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const userLogin = createAsyncThunk(\"user/userLogin\", async (email, password) => {\n  try {\n    let response = await fetch(\"/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        email: email,\n        password: password\n      }\n    });\n    let data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error(error.message);\n  }\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userData: []\n  },\n  extraReducers: {\n    [userLogin.pending]: () => {\n      console.log(\"pending user login\");\n    },\n    [userLogin.fulfilled]: (state, action) => {\n      state.userData = action.payload;\n      localStorage.setItem(\"userInfo\", JSON.stringify(userData));\n    },\n    [userLogin.rejected]: () => {\n      console.log(\"rejected user login\");\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userLogin","email","password","response","fetch","method","headers","body","data","json","console","log","error","message","userSlice","name","initialState","userData","extraReducers","pending","fulfilled","state","action","payload","localStorage","setItem","JSON","stringify","rejected","reducer"],"sources":["/media/sunil/Local Disk F/kirana/frontend/src/features/userSlice.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const userLogin = createAsyncThunk(\n  \"user/userLogin\",\n  async (email, password) => {\n    try {\n      let response = await fetch(\"/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: {\n          email: email,\n          password: password,\n        },\n      });\n\n      let data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n);\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userData: [],\n  },\n  extraReducers: {\n    [userLogin.pending]: () => {\n      console.log(\"pending user login\");\n    },\n    [userLogin.fulfilled]: (state, action) => {\n      state.userData = action.payload;\n      localStorage.setItem(\"userInfo\", JSON.stringify(userData));\n    },\n    [userLogin.rejected]: () => {\n      console.log(\"rejected user login\");\n    },\n  },\n});\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACvC,gBADuC,EAEvC,OAAOE,KAAP,EAAcC,QAAd,KAA2B;EACzB,IAAI;IACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;MAC7CC,MAAM,EAAE,MADqC;MAE7CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFoC;MAK7CC,IAAI,EAAE;QACJN,KAAK,EAAEA,KADH;QAEJC,QAAQ,EAAEA;MAFN;IALuC,CAArB,CAA1B;IAWA,IAAIM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACD,CAdD,CAcE,OAAOI,KAAP,EAAc;IACdF,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;EACD;AACF,CApBsC,CAAlC;AAuBP,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC5BiB,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,QAAQ,EAAE;EADE,CAFc;EAK5BC,aAAa,EAAE;IACb,CAAClB,SAAS,CAACmB,OAAX,GAAqB,MAAM;MACzBT,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACD,CAHY;IAIb,CAACX,SAAS,CAACoB,SAAX,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACxCD,KAAK,CAACJ,QAAN,GAAiBK,MAAM,CAACC,OAAxB;MACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeV,QAAf,CAAjC;IACD,CAPY;IAQb,CAACjB,SAAS,CAAC4B,QAAX,GAAsB,MAAM;MAC1BlB,OAAO,CAACC,GAAR,CAAY,qBAAZ;IACD;EAVY;AALa,CAAD,CAA7B;AAmBA,eAAeG,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}