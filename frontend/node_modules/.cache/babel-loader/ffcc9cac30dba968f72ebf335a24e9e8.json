{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const getCartItems = createAsyncThunk(\"cart/getCartItems\", async (pid, quantity) => {\n  try {\n    let response = await fetch(`/api/products/${pid}`);\n    let data = await response.json();\n    console.log(data);\n  } catch (err) {\n    console.error(err.message);\n  }\n});\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    addCartItem: (state, action) => {\n      const currentItem = action.payload;\n      const doesExists = state.cartItems.find(item => item.product === currentItem.product);\n\n      if (!doesExists) {\n        state.cartItems = [...state.cartItems, currentItem];\n      }\n    }\n  },\n  extraReducers: {\n    [getCartItems.pending]: () => {\n      console.log(\"pendng\");\n    },\n    [getCartItems.fulfilled]: (state, action) => {\n      state.cartItems = action.payload;\n    },\n    [getCartItems.rejected]: () => {\n      console.log(\"rejected\");\n    }\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","getCartItems","pid","quantity","response","fetch","data","json","console","log","err","error","message","cartSlice","name","initialState","cartItems","reducers","addCartItem","state","action","currentItem","payload","doesExists","find","item","product","extraReducers","pending","fulfilled","rejected","reducer"],"sources":["/media/sunil/Local Disk F/kirana/frontend/src/features/cartSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const getCartItems = createAsyncThunk(\n  \"cart/getCartItems\",\n  async (pid, quantity) => {\n    try {\n      let response = await fetch(`/api/products/${pid}`);\n      let data = await response.json();\n      console.log(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n);\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: [],\n  },\n  reducers: {\n    addCartItem: (state, action) => {\n      const currentItem = action.payload;\n      const doesExists = state.cartItems.find(\n        (item) => item.product === currentItem.product\n      );\n\n      if (!doesExists) {\n        state.cartItems = [...state.cartItems, currentItem];\n      }\n    },\n  },\n  extraReducers: {\n    [getCartItems.pending]: () => {\n      console.log(\"pendng\");\n    },\n    [getCartItems.fulfilled]: (state, action) => {\n      state.cartItems = action.payload;\n    },\n    [getCartItems.rejected]: () => {\n      console.log(\"rejected\");\n    },\n  },\n});\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,mBAD0C,EAE1C,OAAOG,GAAP,EAAYC,QAAZ,KAAyB;EACvB,IAAI;IACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBH,GAAI,EAAtB,CAA1B;IACA,IAAII,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACD,CAJD,CAIE,OAAOI,GAAP,EAAY;IACZF,OAAO,CAACG,KAAR,CAAcD,GAAG,CAACE,OAAlB;EACD;AACF,CAVyC,CAArC;AAaP,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,SAAS,EAAE;EADC,CAFc;EAK5BC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9B,MAAMC,WAAW,GAAGD,MAAM,CAACE,OAA3B;MACA,MAAMC,UAAU,GAAGJ,KAAK,CAACH,SAAN,CAAgBQ,IAAhB,CAChBC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiBL,WAAW,CAACK,OADtB,CAAnB;;MAIA,IAAI,CAACH,UAAL,EAAiB;QACfJ,KAAK,CAACH,SAAN,GAAkB,CAAC,GAAGG,KAAK,CAACH,SAAV,EAAqBK,WAArB,CAAlB;MACD;IACF;EAVO,CALkB;EAiB5BM,aAAa,EAAE;IACb,CAAC1B,YAAY,CAAC2B,OAAd,GAAwB,MAAM;MAC5BpB,OAAO,CAACC,GAAR,CAAY,QAAZ;IACD,CAHY;IAIb,CAACR,YAAY,CAAC4B,SAAd,GAA0B,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAC3CD,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACE,OAAzB;IACD,CANY;IAOb,CAACrB,YAAY,CAAC6B,QAAd,GAAyB,MAAM;MAC7BtB,OAAO,CAACC,GAAR,CAAY,UAAZ;IACD;EATY;AAjBa,CAAD,CAA7B;AA8BA,eAAeI,SAAS,CAACkB,OAAzB"},"metadata":{},"sourceType":"module"}